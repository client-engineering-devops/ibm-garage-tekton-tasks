apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: tensorflow-model
  annotations:
spec:
  params:
    - name: git-url
      description: The url for the git repository
    - name: git-revision
      description: The git revision (branch, tag, or sha) that should be built
      default: master
    - name: scan-image
      description: Enable the pipeline to scan the image for vulnerabilities
      default: "true"
    - name: lint-dockerfile
      description: Enable the pipeline to lint the Dockerfile for best practices
      default: "true"
    - name: health-endpoint
      description: Endpoint to check health after deployment, defaults /
      default: "/"
  tasks:
    - name: setup
      taskRef:
        name: ibm-setup-v2-7-3
      params:
        - name: git-url
          value: $(params.git-url)
        - name: git-revision
          value: $(params.git-revision)
        - name: scan-image
          value: $(params.scan-image)
        - name: health-endpoint
          value: $(params.health-endpoint)
        - name: lint-dockerfile
          value: $(params.lint-dockerfile)
    - name: code-lint
      taskRef:
        name: ibm-sonar-test-v2-7-3
      runAfter:
        - setup
      params:
        - name: git-url
          value: "$(tasks.setup.results.git-url)"
        - name: git-revision
          value: "$(tasks.setup.results.git-revision)"
        - name: source-dir
          value: "$(tasks.setup.results.source-dir)"
        - name: app-name
          value: $(tasks.setup.results.app-name)
    - name: dockerfile-lint
      taskRef:
        name: ibm-dockerfile-lint-v2-7-3
      runAfter:
        - code-lint
      params:
        - name: git-url
          value: "$(tasks.setup.results.git-url)"
        - name: git-revision
          value: "$(tasks.setup.results.git-revision)"
        - name: source-dir
          value: "$(tasks.setup.results.source-dir)"
        - name: lint-dockerfile
          value: "$(tasks.setup.results.dockerfile-lint)"
    - name: train
      taskRef:
        name: train-tensorflow-model-push
      runAfter:
        - dockerfile-lint
      params:
        - name: git-url
          value: "$(tasks.setup.results.git-url)"
        - name: git-revision
          value: "$(tasks.setup.results.git-revision)"
        - name: source-dir
          value: "$(tasks.setup.results.source-dir)"
        - name: image-server
          value: "$(tasks.setup.results.image-server)"
        - name: image-namespace
          value: "$(tasks.setup.results.image-namespace)"
        - name: image-repository
          value: "$(tasks.setup.results.image-repository)"
        - name: image-tag
          value: "$(tasks.setup.results.image-tag)"



